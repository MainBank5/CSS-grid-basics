*{
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    background-color: gray;
}

.item {
    background-color: blue;
    padding: 10px;
    margin: 10px;
}

.container {
    background-color: yellow;
    color: white;

    display: grid;
    grid-template-columns: repeat(3, 200px); 
    /* if you dont want to specify the number of columns, you can use auto-fill or auto fit. 
Auto fill/fit creates as many columns as will fit in your container */
/* auto fit and fill difference - fit the columns created completely fill the size of the container 
without leaving space. all columns fit. with fill don't necessary have to necessary occupy all the container space */

/* max and min content sizing units. Max-content means the column sizes will expand enough
so that the content is displayed in one long line. Min-content will make the track as small as it can be 
without content overflow */
/* in the grid template example above, the grid isnt responsive. to make it responsive we use the minmax sizing unit */
 
    /*grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));*/
    gap: 20px 50px;
    grid-auto-rows: minmax(150px, auto);
    /* grid auto row sets the size of implicit rows */

    align-items: stretch;
    /* align items works when you've declared the size of implicit rows/column */
    /* the values are stretch(default), start(top), end(bottom).
    use the developer tools in browser to view the placements */
    justify-content: end;
    /* justify content comes with all its values - start(left) center, end(right), space-between and around */



}

/* styling and individual item*/

.item:nth-of-type(2) {
    background-color: brown;
    height: 80px;
    width: 80px;

    align-self: end;
    justify-self: center;
}

.item:nth-of-type(1) {
    background-color: black;
    /*grid-column-start: 1;
    grid-column-end: 3;*/
    grid-column: 1 / 3;
}

/* start is the starting point. The column will then end where the specified number starts
the shorthand for this is grid-column/row: x / y or grid-column/row: x / span y */

.item:nth-of-type(3) {
    background-color: green;
    grid-row: 2 / span 2;
}

.item:nth-of-type(4) {
    background-color: purple;
    grid-row: 2 / 4;
}

.item:nth-of-type(5) {
    background-color: rosybrown;
    grid-row: 2/ 4;
   
}

